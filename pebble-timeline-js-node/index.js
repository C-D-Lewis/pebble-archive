var XMLHttpRequest = require("xmlhttprequest").XMLHttpRequest;

// The timeline public URL root
var API_URL_ROOT = 'https://timeline-api.getpebble.com/';
var TAG = 'pebble-timeline-js';

function Log(msg) {
  console.log(TAG + ': ' + msg);
}

/**
 * Send a request to the Pebble public web timeline API.
 * @param pin The JSON pin to insert. Must contain 'id' field.
 * @param type The type of request, either PUT or DELETE.
 * @param topics Array of topics if a shared pin, 'null' otherwise.
 * @param apiKey Timeline API key for this app, available from dev-portal.getpebble.com
 * @param callback The callback to receive the responseText after the request has completed.
 */
function timelineRequest(pin, type, topics, apiKey, userToken, callback) {
  // User or shared?
  var url = API_URL_ROOT + 'v1/' + ((topics != null) ? 'shared/' : 'user/') + 'pins/' + pin.id;

  var xhr = new XMLHttpRequest();
  xhr.onload = function () {
    Log('response received: ' + this.responseText);
    callback(this.responseText);
  };
  xhr.open(type, url);

  if(userToken != null) {
    xhr.setRequestHeader('X-User-Token', userToken);
  }

  // Set headers
  xhr.setRequestHeader('Content-Type', 'application/json');
  if(topics != null) {
    xhr.setRequestHeader('X-Pin-Topics', '' + topics.join(','));
    xhr.setRequestHeader('X-API-Key', '' + apiKey);
  }

  // Send
  xhr.send(JSON.stringify(pin));
  Log('request sent.');
}

/**
 * Insert a pin into the timeline for these topics.
 * @param pin The JSON pin to insert.
 * @param topics Array of topics to insert pin to.
 * @param apiKey Timeline API key for this app, available from dev-portal.getpebble.com
 * @param callback The callback to receive the responseText after the request has completed.
 */
function insertSharedPin(pin, topics, apiKey, callback) {
  timelineRequest(pin, 'PUT', topics, apiKey, null, callback);
}

/**
 * Delete a pin from the timeline for these topics.
 * @param pin The JSON pin to delete.
 * @param topics Array of topics to delete pin from.
 * @param apiKey Timeline API key for this app, available from dev-portal.getpebble.com
 * @param callback The callback to receive the responseText after the request has completed.
 */
function deleteSharedPin(pin, topics, apiKey, callback) {
  timelineRequest(pin, 'DELETE', topics, apiKey, null, callback);
}

/**
 * Innsert a user pin into the Pebble timeline. The userToken should be transmitted 
 * from each client app for use by the server.
 * @param pin The JSON pin to post.
 * @param userToken The user token generated by PebbleKit JS.
 * @param callback Callback called when the request is resolved.
 */
function insertUserPin(pin, userToken, callback) {
  timelineRequest(pin, 'PUT', null, null, userToken, callback);
}
/**
 * Delete a user pin into the Pebble timeline. The userToken should be transmitted 
 * from each client app for use by the server.
 * @param pin The JSON pin to post.
 * @param userToken The user token generated by PebbleKit JS.
 * @param callback Callback called when the request is resolved.
 */
function deleteUserPin(pin, userToken, callback) {
  timelineRequest(pin, 'DELETE', null, null, userToken, callback);
}

/**
* Set the user's AppGlances with an array of slice objects.
* @param slices An array of AppGlance slice objects (https://developer.pebble.com/guides/user-interfaces/appglance-rest/#creating-slices)
* @param userToken The user's timeline token, obtained via PebbleKit JS.
* @param callback Callback called when the request is resolved.
*/
function setAppGlances(slices, userToken, callback) {
  var url = API_URL_ROOT + 'v1/user/glance/';

  var xhr = new XMLHttpRequest();
  xhr.onload = function () {
    Log('response received: ' + this.responseText);
    callback(this.responseText);
  };
  xhr.open('PUT', url);

  // Set headers
  xhr.setRequestHeader('Content-Type', 'application/json');
  xhr.setRequestHeader('X-User-Token', userToken);

  // Send
  xhr.send(JSON.stringify({ 'slices': slices }));
  Log('AppGlance request sent.');
}

/********************************** Exports ***********************************/

module.exports.insertSharedPin = insertSharedPin;
module.exports.deleteSharedPin = deleteSharedPin;
module.exports.setAppGlances = setAppGlances;
module.exports.insertUserPin = insertUserPin;
module.exports.deleteUserPin = deleteUserPin;